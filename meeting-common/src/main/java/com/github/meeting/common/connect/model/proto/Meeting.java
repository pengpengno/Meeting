// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Meeting.proto

package com.github.meeting.common.connect.model.proto;

public final class Meeting {
  private Meeting() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MeetingInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:com.github.meeting.common.connect.model.proto.MeetingInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>int64 meetingId = 1;</code>
     * @return The meetingId.
     */
    long getMeetingId();

    /**
     * <code>string meetingName = 2;</code>
     * @return The meetingName.
     */
    java.lang.String getMeetingName();
    /**
     * <code>string meetingName = 2;</code>
     * @return The bytes for meetingName.
     */
    com.google.protobuf.ByteString
        getMeetingNameBytes();

    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    java.util.List<com.github.meeting.common.connect.model.proto.Account.AccountInfo> 
        getMeetingAccountsList();
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    com.github.meeting.common.connect.model.proto.Account.AccountInfo getMeetingAccounts(int index);
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    int getMeetingAccountsCount();
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    java.util.List<? extends com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder> 
        getMeetingAccountsOrBuilderList();
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder getMeetingAccountsOrBuilder(
        int index);

    /**
     * <code>bytes screenData = 4;</code>
     * @return The screenData.
     */
    com.google.protobuf.ByteString getScreenData();
  }
  /**
   * Protobuf type {@code com.github.meeting.common.connect.model.proto.MeetingInfo}
   */
  public static final class MeetingInfo extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:com.github.meeting.common.connect.model.proto.MeetingInfo)
      MeetingInfoOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeetingInfo.newBuilder() to construct.
    private MeetingInfo(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeetingInfo() {
      meetingName_ = "";
      meetingAccounts_ = java.util.Collections.emptyList();
      screenData_ = com.google.protobuf.ByteString.EMPTY;
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeetingInfo();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.meeting.common.connect.model.proto.Meeting.internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.meeting.common.connect.model.proto.Meeting.internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.class, com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.Builder.class);
    }

    public static final int MEETINGID_FIELD_NUMBER = 1;
    private long meetingId_ = 0L;
    /**
     * <code>int64 meetingId = 1;</code>
     * @return The meetingId.
     */
    @java.lang.Override
    public long getMeetingId() {
      return meetingId_;
    }

    public static final int MEETINGNAME_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private volatile java.lang.Object meetingName_ = "";
    /**
     * <code>string meetingName = 2;</code>
     * @return The meetingName.
     */
    @java.lang.Override
    public java.lang.String getMeetingName() {
      java.lang.Object ref = meetingName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        meetingName_ = s;
        return s;
      }
    }
    /**
     * <code>string meetingName = 2;</code>
     * @return The bytes for meetingName.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString
        getMeetingNameBytes() {
      java.lang.Object ref = meetingName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        meetingName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MEETINGACCOUNTS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<com.github.meeting.common.connect.model.proto.Account.AccountInfo> meetingAccounts_;
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    @java.lang.Override
    public java.util.List<com.github.meeting.common.connect.model.proto.Account.AccountInfo> getMeetingAccountsList() {
      return meetingAccounts_;
    }
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    @java.lang.Override
    public java.util.List<? extends com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder> 
        getMeetingAccountsOrBuilderList() {
      return meetingAccounts_;
    }
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    @java.lang.Override
    public int getMeetingAccountsCount() {
      return meetingAccounts_.size();
    }
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    @java.lang.Override
    public com.github.meeting.common.connect.model.proto.Account.AccountInfo getMeetingAccounts(int index) {
      return meetingAccounts_.get(index);
    }
    /**
     * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
     */
    @java.lang.Override
    public com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder getMeetingAccountsOrBuilder(
        int index) {
      return meetingAccounts_.get(index);
    }

    public static final int SCREENDATA_FIELD_NUMBER = 4;
    private com.google.protobuf.ByteString screenData_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <code>bytes screenData = 4;</code>
     * @return The screenData.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getScreenData() {
      return screenData_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (meetingId_ != 0L) {
        output.writeInt64(1, meetingId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(meetingName_)) {
        com.google.protobuf.GeneratedMessageV3.writeString(output, 2, meetingName_);
      }
      for (int i = 0; i < meetingAccounts_.size(); i++) {
        output.writeMessage(3, meetingAccounts_.get(i));
      }
      if (!screenData_.isEmpty()) {
        output.writeBytes(4, screenData_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (meetingId_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, meetingId_);
      }
      if (!com.google.protobuf.GeneratedMessageV3.isStringEmpty(meetingName_)) {
        size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, meetingName_);
      }
      for (int i = 0; i < meetingAccounts_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, meetingAccounts_.get(i));
      }
      if (!screenData_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, screenData_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo)) {
        return super.equals(obj);
      }
      com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo other = (com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo) obj;

      if (getMeetingId()
          != other.getMeetingId()) return false;
      if (!getMeetingName()
          .equals(other.getMeetingName())) return false;
      if (!getMeetingAccountsList()
          .equals(other.getMeetingAccountsList())) return false;
      if (!getScreenData()
          .equals(other.getScreenData())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + MEETINGID_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getMeetingId());
      hash = (37 * hash) + MEETINGNAME_FIELD_NUMBER;
      hash = (53 * hash) + getMeetingName().hashCode();
      if (getMeetingAccountsCount() > 0) {
        hash = (37 * hash) + MEETINGACCOUNTS_FIELD_NUMBER;
        hash = (53 * hash) + getMeetingAccountsList().hashCode();
      }
      hash = (37 * hash) + SCREENDATA_FIELD_NUMBER;
      hash = (53 * hash) + getScreenData().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.github.meeting.common.connect.model.proto.MeetingInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:com.github.meeting.common.connect.model.proto.MeetingInfo)
        com.github.meeting.common.connect.model.proto.Meeting.MeetingInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.meeting.common.connect.model.proto.Meeting.internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.meeting.common.connect.model.proto.Meeting.internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.class, com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.Builder.class);
      }

      // Construct using com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        meetingId_ = 0L;
        meetingName_ = "";
        if (meetingAccountsBuilder_ == null) {
          meetingAccounts_ = java.util.Collections.emptyList();
        } else {
          meetingAccounts_ = null;
          meetingAccountsBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        screenData_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.meeting.common.connect.model.proto.Meeting.internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_descriptor;
      }

      @java.lang.Override
      public com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo getDefaultInstanceForType() {
        return com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.getDefaultInstance();
      }

      @java.lang.Override
      public com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo build() {
        com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo buildPartial() {
        com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo result = new com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo result) {
        if (meetingAccountsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            meetingAccounts_ = java.util.Collections.unmodifiableList(meetingAccounts_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.meetingAccounts_ = meetingAccounts_;
        } else {
          result.meetingAccounts_ = meetingAccountsBuilder_.build();
        }
      }

      private void buildPartial0(com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.meetingId_ = meetingId_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.meetingName_ = meetingName_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.screenData_ = screenData_;
        }
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo) {
          return mergeFrom((com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo other) {
        if (other == com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo.getDefaultInstance()) return this;
        if (other.getMeetingId() != 0L) {
          setMeetingId(other.getMeetingId());
        }
        if (!other.getMeetingName().isEmpty()) {
          meetingName_ = other.meetingName_;
          bitField0_ |= 0x00000002;
          onChanged();
        }
        if (meetingAccountsBuilder_ == null) {
          if (!other.meetingAccounts_.isEmpty()) {
            if (meetingAccounts_.isEmpty()) {
              meetingAccounts_ = other.meetingAccounts_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureMeetingAccountsIsMutable();
              meetingAccounts_.addAll(other.meetingAccounts_);
            }
            onChanged();
          }
        } else {
          if (!other.meetingAccounts_.isEmpty()) {
            if (meetingAccountsBuilder_.isEmpty()) {
              meetingAccountsBuilder_.dispose();
              meetingAccountsBuilder_ = null;
              meetingAccounts_ = other.meetingAccounts_;
              bitField0_ = (bitField0_ & ~0x00000004);
              meetingAccountsBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getMeetingAccountsFieldBuilder() : null;
            } else {
              meetingAccountsBuilder_.addAllMessages(other.meetingAccounts_);
            }
          }
        }
        if (other.getScreenData() != com.google.protobuf.ByteString.EMPTY) {
          setScreenData(other.getScreenData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                meetingId_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                meetingName_ = input.readStringRequireUtf8();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                com.github.meeting.common.connect.model.proto.Account.AccountInfo m =
                    input.readMessage(
                        com.github.meeting.common.connect.model.proto.Account.AccountInfo.parser(),
                        extensionRegistry);
                if (meetingAccountsBuilder_ == null) {
                  ensureMeetingAccountsIsMutable();
                  meetingAccounts_.add(m);
                } else {
                  meetingAccountsBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                screenData_ = input.readBytes();
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long meetingId_ ;
      /**
       * <code>int64 meetingId = 1;</code>
       * @return The meetingId.
       */
      @java.lang.Override
      public long getMeetingId() {
        return meetingId_;
      }
      /**
       * <code>int64 meetingId = 1;</code>
       * @param value The meetingId to set.
       * @return This builder for chaining.
       */
      public Builder setMeetingId(long value) {
        
        meetingId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>int64 meetingId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeetingId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        meetingId_ = 0L;
        onChanged();
        return this;
      }

      private java.lang.Object meetingName_ = "";
      /**
       * <code>string meetingName = 2;</code>
       * @return The meetingName.
       */
      public java.lang.String getMeetingName() {
        java.lang.Object ref = meetingName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          meetingName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>string meetingName = 2;</code>
       * @return The bytes for meetingName.
       */
      public com.google.protobuf.ByteString
          getMeetingNameBytes() {
        java.lang.Object ref = meetingName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          meetingName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>string meetingName = 2;</code>
       * @param value The meetingName to set.
       * @return This builder for chaining.
       */
      public Builder setMeetingName(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        meetingName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>string meetingName = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeetingName() {
        meetingName_ = getDefaultInstance().getMeetingName();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>string meetingName = 2;</code>
       * @param value The bytes for meetingName to set.
       * @return This builder for chaining.
       */
      public Builder setMeetingNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        meetingName_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }

      private java.util.List<com.github.meeting.common.connect.model.proto.Account.AccountInfo> meetingAccounts_ =
        java.util.Collections.emptyList();
      private void ensureMeetingAccountsIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          meetingAccounts_ = new java.util.ArrayList<com.github.meeting.common.connect.model.proto.Account.AccountInfo>(meetingAccounts_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.meeting.common.connect.model.proto.Account.AccountInfo, com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder, com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder> meetingAccountsBuilder_;

      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public java.util.List<com.github.meeting.common.connect.model.proto.Account.AccountInfo> getMeetingAccountsList() {
        if (meetingAccountsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(meetingAccounts_);
        } else {
          return meetingAccountsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public int getMeetingAccountsCount() {
        if (meetingAccountsBuilder_ == null) {
          return meetingAccounts_.size();
        } else {
          return meetingAccountsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public com.github.meeting.common.connect.model.proto.Account.AccountInfo getMeetingAccounts(int index) {
        if (meetingAccountsBuilder_ == null) {
          return meetingAccounts_.get(index);
        } else {
          return meetingAccountsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder setMeetingAccounts(
          int index, com.github.meeting.common.connect.model.proto.Account.AccountInfo value) {
        if (meetingAccountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.set(index, value);
          onChanged();
        } else {
          meetingAccountsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder setMeetingAccounts(
          int index, com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder builderForValue) {
        if (meetingAccountsBuilder_ == null) {
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.set(index, builderForValue.build());
          onChanged();
        } else {
          meetingAccountsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder addMeetingAccounts(com.github.meeting.common.connect.model.proto.Account.AccountInfo value) {
        if (meetingAccountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.add(value);
          onChanged();
        } else {
          meetingAccountsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder addMeetingAccounts(
          int index, com.github.meeting.common.connect.model.proto.Account.AccountInfo value) {
        if (meetingAccountsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.add(index, value);
          onChanged();
        } else {
          meetingAccountsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder addMeetingAccounts(
          com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder builderForValue) {
        if (meetingAccountsBuilder_ == null) {
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.add(builderForValue.build());
          onChanged();
        } else {
          meetingAccountsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder addMeetingAccounts(
          int index, com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder builderForValue) {
        if (meetingAccountsBuilder_ == null) {
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.add(index, builderForValue.build());
          onChanged();
        } else {
          meetingAccountsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder addAllMeetingAccounts(
          java.lang.Iterable<? extends com.github.meeting.common.connect.model.proto.Account.AccountInfo> values) {
        if (meetingAccountsBuilder_ == null) {
          ensureMeetingAccountsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, meetingAccounts_);
          onChanged();
        } else {
          meetingAccountsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder clearMeetingAccounts() {
        if (meetingAccountsBuilder_ == null) {
          meetingAccounts_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          meetingAccountsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public Builder removeMeetingAccounts(int index) {
        if (meetingAccountsBuilder_ == null) {
          ensureMeetingAccountsIsMutable();
          meetingAccounts_.remove(index);
          onChanged();
        } else {
          meetingAccountsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder getMeetingAccountsBuilder(
          int index) {
        return getMeetingAccountsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder getMeetingAccountsOrBuilder(
          int index) {
        if (meetingAccountsBuilder_ == null) {
          return meetingAccounts_.get(index);  } else {
          return meetingAccountsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public java.util.List<? extends com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder> 
           getMeetingAccountsOrBuilderList() {
        if (meetingAccountsBuilder_ != null) {
          return meetingAccountsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(meetingAccounts_);
        }
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder addMeetingAccountsBuilder() {
        return getMeetingAccountsFieldBuilder().addBuilder(
            com.github.meeting.common.connect.model.proto.Account.AccountInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder addMeetingAccountsBuilder(
          int index) {
        return getMeetingAccountsFieldBuilder().addBuilder(
            index, com.github.meeting.common.connect.model.proto.Account.AccountInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.github.meeting.common.connect.model.proto.AccountInfo meetingAccounts = 3;</code>
       */
      public java.util.List<com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder> 
           getMeetingAccountsBuilderList() {
        return getMeetingAccountsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          com.github.meeting.common.connect.model.proto.Account.AccountInfo, com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder, com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder> 
          getMeetingAccountsFieldBuilder() {
        if (meetingAccountsBuilder_ == null) {
          meetingAccountsBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              com.github.meeting.common.connect.model.proto.Account.AccountInfo, com.github.meeting.common.connect.model.proto.Account.AccountInfo.Builder, com.github.meeting.common.connect.model.proto.Account.AccountInfoOrBuilder>(
                  meetingAccounts_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          meetingAccounts_ = null;
        }
        return meetingAccountsBuilder_;
      }

      private com.google.protobuf.ByteString screenData_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <code>bytes screenData = 4;</code>
       * @return The screenData.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getScreenData() {
        return screenData_;
      }
      /**
       * <code>bytes screenData = 4;</code>
       * @param value The screenData to set.
       * @return This builder for chaining.
       */
      public Builder setScreenData(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        screenData_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>bytes screenData = 4;</code>
       * @return This builder for chaining.
       */
      public Builder clearScreenData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        screenData_ = getDefaultInstance().getScreenData();
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:com.github.meeting.common.connect.model.proto.MeetingInfo)
    }

    // @@protoc_insertion_point(class_scope:com.github.meeting.common.connect.model.proto.MeetingInfo)
    private static final com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo();
    }

    public static com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeetingInfo>
        PARSER = new com.google.protobuf.AbstractParser<MeetingInfo>() {
      @java.lang.Override
      public MeetingInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeetingInfo> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeetingInfo> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public com.github.meeting.common.connect.model.proto.Meeting.MeetingInfo getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rMeeting.proto\022-com.github.meeting.comm" +
      "on.connect.model.proto\032\rAccount.proto\"\236\001" +
      "\n\013MeetingInfo\022\021\n\tmeetingId\030\001 \001(\003\022\023\n\013meet" +
      "ingName\030\002 \001(\t\022S\n\017meetingAccounts\030\003 \003(\0132:" +
      ".com.github.meeting.common.connect.model" +
      ".proto.AccountInfo\022\022\n\nscreenData\030\004 \001(\014B8" +
      "\n-com.github.meeting.common.connect.mode" +
      "l.protoB\007Meetingb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.github.meeting.common.connect.model.proto.Account.getDescriptor(),
        });
    internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_com_github_meeting_common_connect_model_proto_MeetingInfo_descriptor,
        new java.lang.String[] { "MeetingId", "MeetingName", "MeetingAccounts", "ScreenData", });
    com.github.meeting.common.connect.model.proto.Account.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
